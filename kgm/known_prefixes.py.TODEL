import ipdb

class rdf:
    prefix__ = "rdf"
    prefix_uri_s__ = "http://www.w3.org/1999/02/22-rdf-syntax-ns#"

rdf.type = (rdf, "type")

class rdfs:
    prefix__ = "rdfs"
    prefix_uri_s__ = "http://www.w3.org/2000/01/rdf-schema#"
    
rdfs.Class = (rdfs, "Class")
    
class xsd:
    prefix__ = "xsd"
    prefix_uri_s__ = "http://www.w3.org/2001/XMLSchema#"

xsd.string = (xsd, "string")
xsd.boolean = (xsd, "boolean")
xsd.integer = (xsd, "integer")
xsd.float = (xsd, "float")
xsd.double = (xsd, "double")


""" NB: this is CS codegen constants
xsd_dflt_cs_values = {}
xsd_dflt_cs_values[xsd.string] = "\"\""
xsd_dflt_cs_values[xsd.boolean] = "\"false\""
xsd_dflt_cs_values[xsd.integer] = "0"
xsd_dflt_cs_values[xsd.float] = "0.0f"
xsd_dflt_cs_values[xsd.double] = "0.0"
"""

class sh:
    prefix__ = "sh"
    prefix_uri_s__ = "http://www.w3.org/ns/shacl#"

sh.property = (sh, "property")
sh.path = (sh, "path")
sh.datatype = (sh, "datatype")
sh.class_ = (sh, "class")
sh.min_c = (sh, "minCount")
sh.max_c = (sh, "maxCount")
sh.NodeShape = (sh, "NodeShape")

class dash:
    prefix__ = "dash"
    prefix_uri_s__ = "http://datashapes.org/dash#"

dash.closedByType = (dash, "closedByType")

class kgm:
    prefix__ = "kgm"
    prefix_uri_s__ = "http://www.geisel-software.com/kgm/kgm#"

kgm.Graph = (kgm, "Graph")
kgm.path = (kgm, "path")

def build_uri__(prefix_cls, suffix) -> "URI":
    from .rdf_terms import URI
    return URI(rdftf = None,
               uri_s = prefix_cls.prefix_uri_s__ + suffix,
               prefix = prefix_cls.prefix__,
               prefix_part = prefix_cls.prefix_uri_s__,
               suffix_part = suffix)

def init_known_prefixes():
    ipdb.set_trace()
    for k, v in vars(rdf).items():
        if not k.startswith("__") and not k.endswith("__"):
            v = build_uri__(*v)
    
    return 1

known_prefixes_initialized = init_known_prefixes()
